esphome:
  name: s3
  friendly_name: S3
  platformio_options:
    board_build.flash_mode: dio #dio, dout, qio, qout, oio, oout


# ESP32-S3-WROOM-1-N8R2 https://www.espressif.com/sites/default/files/documentation/esp32-s3-wroom-1_wroom-1u_datasheet_en.pdf
esp32:
  board: esp32-s3-devkitc-1 # https://github.com/platformio/platform-espressif32/blob/develop/boards/esp32-s3-devkitc-1.json
  variant: esp32s3
  flash_size: 8MB

  framework:
    type: esp-idf
    version: recommended

psram:
  mode: quad
  speed: 80MHz
  
# Enable logging
# https://esphome.io/components/logger.html
logger:
  #level: debug
  hardware_uart: UART0 # default for s3 is USB JTAG

# Enable Home Assistant API
api:
  encryption:
    key: "NgqSWgZOxQb6WoVaKOfyuc525WuiCs7YMPoa07ZBgqg="

ota:
  password: "7c6d06cc2383899d107de43cb760117c"

wifi:
  reboot_timeout: 0s # never reboot on loss of home assistant connection
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # Optional manual IP
  manual_ip:
    static_ip: 192.168.0.198
    gateway: 192.168.0.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Test3 Fallback Hotspot"
    password: "0JOXPwVf2EQJ"

captive_portal:

dallas:
  - pin: GPIO4
    update_interval: 10s

# i2c for max31865 RTD
spi:
  miso_pin: GPIO39 #SDO
  mosi_pin: GPIO40 #SDI
  clk_pin: GPIO41

# Individual sensors
sensor:
  - platform: dallas
    address: 0x074dc7d446b9d228
    name: "Test Temperature"
    id: tic101_pv
  - platform: dallas
    address: 0xb62ac1d446cac528
    name: "Test Temperature2"
    id: tic102_pv
  - platform: pid
    name: "PID Climate Result"
    type: RESULT
  - platform: max31865
    name: "HLT Temperature"
    cs_pin: GPIO42
    reference_resistance: 400 Ω
    rtd_nominal_resistance: 100 Ω


#Each GPIO can be either a Switch, PWM or sigma, not all at once.
output:
  - platform: sigma_delta_output
    update_interval: 2s
    id: sd_heater_output
    
    # Output to a pin
    pin: GPIO3 #GPIO5, use 3 as a dummy output


# output:
#   - platform: slow_pwm
#     pin: GPIO25
#     id: sd_heater_output
#     period: 15s

switch:
  - platform: gpio
    pin: GPIO5
    name: "Relay1"
    id: relay1
  - platform: gpio
    pin: GPIO6
    name: "Relay2"
    id: relay2
  - platform: gpio
    pin: GPIO7
    name: "Relay3"
    id: relay3
  - platform: gpio
    pin: GPIO15
    name: "DO1"
  - platform: gpio
    pin: GPIO16
    name: "DO2"
  - platform: gpio
    pin: GPIO17
    name: "DO3"

button:
  - platform: restart
    name: "TIC101 Restart"
  - platform: shutdown
    name: "TIC101 ESD"  
    icon: "mdi:icon-remove-sign" #https://www.esphome.app/docs/icons
  - platform: template
    name: "PID Climate Autotune"
    on_press:
      - climate.pid.autotune:
          id: pid_climate
          noiseband: 3.0 # The noiseband of the process (=sensor) variable. The value of the PID controller must be able to reach this value.
          positive_output: 100% # The positive output power to drive the heat output at. Defaults to 1.0.
          negative_output: -100%  # The negative output power to drive the cool output at. Defaults to -1.0.

    # on_...:
    #   - climate.pid.set_control_parameters:
    #       id: pid_climate
    #       kp: 0.0
    #       ki: 0.0
    #       kd: 0.0

  # Results of an auto tune, this should be a reasonable starting point for an element in a 10-20L pot.
      # 'Ziegler-Nichols PI': kp: 0.15279, ki: 0.00010, kd: 0.00000
      # 'Pessen Integral PID':kp: 0.23767, ki: 0.00034, kd: 62.60264
      # 'Some Overshoot PID': kp: 0.11306, ki: 0.00013, kd: 66.17994
      # 'No Overshoot PID':   kp: 0.06791, ki: 0.00008, kd: 37.26348

climate:
  - platform: pid
    visual:
      min_temperature: 0
      max_temperature: 100
      temperature_step:
        target_temperature: 0.5
        current_temperature: 0.1
    id: pid_climate
    name: "PID Climate Controller"
    sensor: tic101_pv
    default_target_temperature: 0°C
    heat_output: sd_heater_output
    # tuning https://github.com/esphome/esphome/blob/dev/esphome/components/pid/pid_controller.cpp
    control_parameters:
      kp: 0.15279
      ki: 0.00010
      kd: 0.0
    # deadband_parameters:
    #   threshold_high: 0.5°C
    #   threshold_low: -0.5°C
    #   kp_multiplier: 0.0   # proportional gain turned off inside deadband
    #   ki_multiplier: 0.05  # integral accumulates at only 5% of normal ki
    #   kd_multiplier: 0.0   # derviative is turned off inside deadband
    #   deadband_output_averaging_samples: 15   # average the output over 15 samples within the deadband

# for future ATECC608A, not part of ESPHOME
i2c:
  sda: GPIO8
  scl: GPIO9
  scan: true
  id: bus_a